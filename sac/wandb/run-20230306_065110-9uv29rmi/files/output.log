
cuda:0
/home/filippo/miniconda3/envs/robot/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and may be removed in the future, "
/home/filippo/miniconda3/envs/robot/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Downloading: "https://download.pytorch.org/models/vgg16-397923af.pth" to /home/filippo/.cache/torch/hub/checkpoints/vgg16-397923af.pth





























































100.0%
Soft Q Network (1,2):  SoftQNetwork(
  (batch_norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv_gen2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
  (linear1): Linear(in_features=256, out_features=224, bias=True)
  (linear_1): Linear(in_features=6, out_features=64, bias=True)
  (linear_2): Linear(in_features=64, out_features=64, bias=True)
  (linear_3): Linear(in_features=64, out_features=32, bias=True)
  (linear_state_combined): Linear(in_features=256, out_features=512, bias=True)
  (linear_combined_1): Linear(in_features=550, out_features=256, bias=True)
  (linear_combined_2): Linear(in_features=256, out_features=128, bias=True)
  (linear_action_1): Linear(in_features=7, out_features=64, bias=True)
  (linear_action_2): Linear(in_features=64, out_features=38, bias=True)
  (linear_final): Linear(in_features=128, out_features=1, bias=True)
)
Policy Network:  PolicyNetwork(
  (batch_norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv_gen2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
  (linear1): Linear(in_features=256, out_features=480, bias=True)
  (linear_1): Linear(in_features=6, out_features=64, bias=True)
  (linear_2): Linear(in_features=64, out_features=64, bias=True)
  (linear_3): Linear(in_features=64, out_features=32, bias=True)
  (linear_combined_1): Linear(in_features=512, out_features=1024, bias=True)
  (linear_combined_2): Linear(in_features=1024, out_features=512, bias=True)
  (mean_linear): Linear(in_features=512, out_features=7, bias=True)
  (log_std_linear): Linear(in_features=512, out_features=7, bias=True)
)
Traceback (most recent call last):
  File "train.py", line 130, in <module>
    action_RL = sac_trainer.policy_net.get_action(state_image, state_hand, deterministic = DETERMINISTIC)
  File "/home/filippo/Desktop/Project/Experiments/JacoRLDR/sac/policy_network.py", line 135, in get_action
    mean, log_std = self.forward(state_image, state_hand)
  File "/home/filippo/Desktop/Project/Experiments/JacoRLDR/sac/policy_network.py", line 84, in forward
    x_cnn = self.forward_CNN(state_image)
  File "/home/filippo/Desktop/Project/Experiments/JacoRLDR/sac/policy_network.py", line 53, in forward_CNN
    x = self.batch_norm(state)
  File "/home/filippo/miniconda3/envs/robot/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/filippo/miniconda3/envs/robot/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 182, in forward
    self.eps,
  File "/home/filippo/miniconda3/envs/robot/lib/python3.7/site-packages/torch/nn/functional.py", line 2451, in batch_norm
    input, weight, bias, running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: running_mean should contain 3 elements not 256